openapi: 3.0.1
info:
  title: cc-inv-update
  description: Cloud Cognitive Data Platform for inventory updates
  termsOfService: http://swagger.io/terms/
  contact:
    email: nobody@nowhere.com
  license:
    name: ""
    url: http://somwhere
  version: 0.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://cc-inv-meta-dev.mybluemix.net/cc-inv-update
tags:
- name: inv_updates
  description: inventory updates reflect a change to inventory position for a product at a location. 
paths:
  /{tenant_id}/{location_id}/inv_updates:
    parameters:
      - $ref: '#/components/parameters/tenant_id_param'
      - $ref: '#/components/parameters/location_id_param'
      - in: query
        name: filter
        required: false
        schema:
          type: object
        description: filter updates
        examples:
          by-type: 
            value:
              type: ["supply-delta", "supply-absolute"]
          by-segement:
            value:
              segement: "store-repl"
    get:
      tags:
      - inv_updates
      summary: list inv_updates
      description: Get the list of inv_updates
      operationId: inv_updates-get
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/inv_update'
        400:
          description: Invalid status value
          content: {}
      security:
      - cc_inv_auth:
        - write:cc_inv
        - read:cc_inv

  /{tenant_id}/{location_id}/inv_updates/{inv_update_id}:
    parameters:
    - $ref: '#/components/parameters/tenant_id_param'
    - $ref: '#/components/parameters/location_id_param'
    - name: inv_update_id
      in: path
      description: ID of the inventory update
      required: true
      schema:
        type: string
    get:
      tags:
      - inv_updates
      summary: get a inv_update
      description: Get a inv_update by id
      operationId: inv_update-get
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inv_update'
        500:
          description: Invalid input
          content: {}
      security:
      - cc_inv_auth:
        - write:cc_inv
        - read:cc_inv
    put:
      tags:
      - inv_updates
      summary: create/update a inv_update
      description: Create or update a inv_update
      operationId: inv_update-put
      requestBody:
        description: List of user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inv_update'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inv_update'
        500:
          description: Invalid input
          content: {}
      security:
      - cc_inv_auth:
        - write:cc_inv
        - read:cc_inv
      x-codegen-request-body-name: body
    delete:
      tags:
      - inv_updates
      summary: delete a inv_update
      description: Delete a inv_update by inv_update id
      operationId: inv_update-delete
      responses:
        200:
          description: successful operation
          content: {}
        500:
          description: Invalid input
          content: {}
      security:
      - cc_inv_auth:
        - write:cc_inv
        - read:cc_inv
components:
  schemas:
    meta-attribute:
      type: object
      properties:
        name:
          type: string
          description: name of the attribute
        value:
          type: string
          description: value of the attribute
    inv_update:
      type: object
      properties:
        inv_update_id:
          type: string
          description: id of the inv_update
        location_id:
          type: string
          description: location's meta object id
        type:
          type: string
          enum: [supply-delta, supply-absolute, demand-delta, demand-absolute]
          description: type of update. Delta or absolute changes to supply or demand.
        operation:
          type: string
          description: operation that causes the update
          example: order-sales, shipment-out, shipment-in, cycle-count
        position_type:
          type: string
          description: type of the inventory position
          example: supply-on-hand, demand-open-order, supply-on-po
        segment:
          type: string
          description: segment of the inventory position
        quantity:
          type: number
          description: quantity of the update
        description:
          type: string
          description: description of the inv_update
        parent_object_id:
          type: string
          description: id of parent meta object if exists
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/meta-attribute'

  parameters:
    tenant_id_param: 
      name: tenant_id
      in: path
      description: ID of the tenant
      required: true
      schema:
        type: string
    location_id_param:
      name: location_id
      in: path
      description: meta object id of an inventory location or aggregation point (DG)
      required: true
      schema:
        type: string
        
  securitySchemes:
    cc_inv_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://petstore.swagger.io/oauth/dialog
          scopes:
            write:cc_inv: modify s4s entities
            read:cc_inv: read s4s entities
