openapi: 3.0.1
info:
  title: cc-inv-meta
  description: Cloud Cognitive Data Platform for inventory meta data
  termsOfService: http://swagger.io/terms/
  contact:
    email: nobody@nowhere.com
  license:
    name: ""
    url: http://somwhere
  version: 0.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://cc-inv-meta-dev.mybluemix.net/cc-inv-meta
tags:
- name: meta-objects
  description: meta objects are the holders of the meta data. A meta-object describes
    the attributes of an entity such as warehouse, product, store in physcial world.
paths:
  /{tenant_id}/{meta_type}/meta-objects:
    parameters:
      - $ref: '#/components/parameters/tenant_id_param'
      - $ref: '#/components/parameters/meta_type_param'
      - in: query
        name: filter
        required: false
        schema:
          type: object
          example: {example: "like below", category: "LIGHT-OIL-CRACKING" }
        description: filter by attributes
    get:
      tags:
      - meta-objects
      summary: list meta-objects
      description: Get the complete list of meta-objects
      operationId: meta-objects-get
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/meta-object'
        400:
          description: Invalid status value
          content: {}
      security:
      - cc_inv_auth:
        - write:cc_inv
        - read:cc_inv
  /{tenant_id}/{meta_type}/meta-objects/{meta-object_id}:
    parameters:
    - $ref: '#/components/parameters/tenant_id_param'
    - $ref: '#/components/parameters/meta_type_param'
    - name: meta-object_id
      in: path
      description: ID of the meta-object
      required: true
      schema:
        type: string
    get:
      tags:
      - meta-objects
      summary: get a meta-object
      description: Get a meta-object by id
      operationId: meta-object-get
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/meta-object'
        500:
          description: Invalid input
          content: {}
      security:
      - cc_inv_auth:
        - write:cc_inv
        - read:cc_inv
    put:
      tags:
      - meta-objects
      summary: create/update a meta-object
      description: Create or update a meta-object
      operationId: meta-object-put
      requestBody:
        description: List of user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/meta-object'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/meta-object'
        500:
          description: Invalid input
          content: {}
      security:
      - cc_inv_auth:
        - write:cc_inv
        - read:cc_inv
      x-codegen-request-body-name: body
    delete:
      tags:
      - meta-objects
      summary: delete a meta-object
      description: Delete a meta-object by meta-object id
      operationId: meta-object-delete
      responses:
        200:
          description: successful operation
          content: {}
        500:
          description: Invalid input
          content: {}
      security:
      - cc_inv_auth:
        - write:cc_inv
        - read:cc_inv
components:
  schemas:
    meta-attribute:
      type: object
      properties:
        name:
          type: string
          description: name of the attribute
        value:
          type: string
          description: value of the attribute
    meta-object:
      type: object
      properties:
        meta-object_id:
          type: string
          description: id of the meta-object
        description:
          type: string
          description: description of the meta-object
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/meta-attribute'

  parameters:
    tenant_id_param: 
      name: tenant_id
      in: path
      description: ID of the tenant
      required: true
      schema:
        type: string
    meta_type_param:
      name: meta_type
      in: path
      description: Type of the meta
      required: true
      schema:
        type: string
        example: product, warehouse, store
    
  securitySchemes:
    cc_inv_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://petstore.swagger.io/oauth/dialog
          scopes:
            write:cc_inv: modify s4s entities
            read:cc_inv: read s4s entities
    api_key:
      type: apiKey
      name: api_key
      in: header
